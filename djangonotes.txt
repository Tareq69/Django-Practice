
Python virtualenv creation -> py -m venv project-name
Python virtualenv activation -> Scripts\activate.bat
Djnago install -> py -m pip install Django
Django project creation-> django-admin startproject projectname
Django app creation-> python manage.py startapp appname

-------------------------------- Views, URLs and Templates--------------------------------------------

Views -> View is the web view that is shown when we enter a url in our browser search engine. In django when we request for a url , it first opens urls.py and then returns a corresponding views.py. Use different Urls.py for different apps. Connect these urls.py with Urls.py of main project files urls.py

templates-> Templates folder will hold the html files for every app. Join templates folder in settings.py using 
  TEMPLATES_DIR = os.path.join(BASE_DIR,'templates'), Also include this directory in templates dictionary of settings.py, 'DIRS': [TEMPLATES_DIR,],

Static files-> css,image,song,video,javascript codes etc. Static file holds these. 
	STATIC_DIR = os.path.join(BASE_DIR,'static'), STATIC_URL = '/static/'
STATICFILES_DIRS = [
    STATIC_DIR,
]
{% load static %} in the top of html file. Also use {"%static "images/abc.jpg"  %"} to load any static files from the static folder.


--------------------------------     Models  --------------------------------------------

We need databases to store information. Django gives us default database sqlite.

We need django models to work with databases in django. Sqlite is usd for normal/ small projcts. For Big projcts we need databases like sqlite/mongodb.
Every django app has a models.py folder. Migration is needed to create and update the database. 
shell command -> Py manage.py shell 
import model-> from appname.models import modelname. function to print database values-> def __str__(self):


--------------------------------------------------- Migration commands----------------------------------------
1) py manage.py migrate
2) py manage.py makemigrations appname
3)py manage.py migrate



------------------------------------- Django admin panel ----------------------------------------------------

Admin panel is given by django for us to insert data and do other things easily. First import the models in admin.py. Then register them. Finally, create a superuser to access the admin site using py manage.py createsuperuser command.